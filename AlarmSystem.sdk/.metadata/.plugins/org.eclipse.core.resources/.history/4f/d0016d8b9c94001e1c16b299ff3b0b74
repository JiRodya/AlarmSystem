#ifndef IO_H
#define IO_H

#include <stdint.h>
#include "xgpio.h" // Use of Xilinx GPIO driver
#include "xscutimer.h"
#include "xscutimer.h"

// Extern declarations for global variables (defined in io.c)
extern XGpio led;
extern XGpio push;
extern XGpio dip;

#define LED_CHANNEL 1

// Extern declarations for Timer (defined in interrupt_handler.c)
extern XScuTimer Timer;
extern XScuTimer *TimerInstancePtr;

typedef enum {
    LED_ALARM,      // Blinking pattern for alarm
    LED_COUNTER     // Binary countdown display
} LED_State;

// Function prototypes
int IO_Initialize();
void IO_SetLedValue(LED_State state, uint8_t counterValue);
uint8_t IO_ReadButtonValue();
uint8_t IO_ReadSwitchValue();
void IO_EnableInterrupts();
void IO_DisableInterrupts();
void IO_RegisterInterruptHandler(XInterruptHandler handler, void *data);
void IO_ButtonInterruptHandler(void *InstancePtr);
void IO_SwitchInterruptHandler(void *InstancePtr);

#endif // IO_H
