//#include "io.h"
//#include "xparameters.h"
//#include "xgpio.h"
//#include "xil_printf.h"
//
//#define ONE_TENTH 32500000 // Half of the CPU clock speed/10
//
//// Define global variables
//XGpio LedInstance;
//XGpio ButtonInstance;
//XGpio SwitchInstance;
//
//void IO_Initialize() {
//    int xResult;
//
//    // Initialize Switch GPIO
//    xResult = XGpio_Initialize(&SwitchInstance, XPAR_SWITCHES_DEVICE_ID);
//    if (xResult != XST_SUCCESS) {
//        xil_printf("Dip switch init failed\r\n");
//        return;
//    }
//    XGpio_SetDataDirection(&SwitchInstance, 1, 0xffffffff);
//
//    // Initialize Button GPIO
//    xResult = XGpio_Initialize(&ButtonInstance, XPAR_BUTTONS_DEVICE_ID);
//    if (xResult != XST_SUCCESS) {
//        xil_printf("Push button init failed\r\n");
//        return;
//    }
//    XGpio_SetDataDirection(&ButtonInstance, 1, 0xffffffff);
//}
//
//void IO_SetLedValue(LED_State state, uint8_t counterValue) {
//    static uint8_t blinkState = 0;
//    uint8_t ledValue = 0;
//
//    switch (state) {
//        case LED_ALARM:
//            blinkState = ~blinkState; // Toggle blink state
//            ledValue = blinkState ? 0xFF : 0x00;
//            break;
//        case LED_COUNTER:
//            ledValue = (counterValue >= 0) ? counterValue : 0;
//            break;
//        default:
//            ledValue = 0x00; // All LEDs off
//            break;
//    }
//
//    XGpio_DiscreteWrite(&LedInstance, LED_CHANNEL, ledValue);
//}
//
//// Implement or remove the remaining functions as per your requirement
