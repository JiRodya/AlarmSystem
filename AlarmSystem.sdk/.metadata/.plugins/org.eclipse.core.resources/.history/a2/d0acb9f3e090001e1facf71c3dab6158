#include "clock.h"
#include "xil_io.h"
#include "xil_types.h"
#include "xil_printf.h"

// Register offsets for the PMOD RTCC module
#define SECONDS_REG 0x00
#define MINUTES_REG 0x01
#define HOURS_REG   0x02
#define ALM0_REG    0x0A
#define ALM1_REG    0x11
#define CONTROL_REG 0x07

// Variables to store the alarm time
static u8 alarm_hour;
static u8 alarm_minute;
static u8 alarm_second;

// Function to initialize the clock
void RTCC_begin(u32 iic_baseaddr, u8 device_address) {
    // Initialize your clock hardware here using I2C
    // This function should configure the clock module and set the initial time
}

// Function to set the clock time
void setClockTime(u8 hour, u8 minute, u8 second) {
    // Implement code to set the clock time here using I2C
}

// Function to set an alarm
void setAlarm(u8 hour, u8 minute, u8 second) {
    // Implement code to set the alarm time here using I2C
    alarm_hour = hour;
    alarm_minute = minute;
    alarm_second = second;
}

// Function to check if the alarm has been triggered
int isAlarmTriggered() {
    // Implement code to check if the alarm is triggered by comparing with the current time
    // Return 1 if triggered, 0 otherwise
}

// Function to handle alarm trigger (you can customize this)
void handleAlarm() {
    // Implement your alarm handling code here
    xil_printf("Alarm triggered!\n");
}

