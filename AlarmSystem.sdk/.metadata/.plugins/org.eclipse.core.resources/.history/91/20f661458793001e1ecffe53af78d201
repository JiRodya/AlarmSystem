#ifndef CLOCK_H
#define CLOCK_H

#include <stdint.h>
#include "PmodRTCC.h"

typedef enum {MAIN, WARNING} alarmType;

typedef enum Target {
   CLOCK = 0, 	// Real-time clock
   MAIN_ALARM,     // Alarm 0
   WARNING_ALARM,     // Alarm 1
   CLOCK_PWRD,     // Power-down time-stamp
   CLOCK_PWRU      // Power-up time-stamp
} Target;

const char *weekdays[7] = {
   "Monday",
   "Tuesday",
   "Wednesday",
   "Thursday",
   "Friday",
   "Saturday",
   "Sunday"
};

typedef struct {
	uint8_t second;
	uint8_t minute;
	uint8_t hour;
	uint8_t ampm;
	uint8_t day;
	uint8_t date;
	uint8_t month;
	uint16_t year;
} Time;

// If RTCC is already set, change 1 to 0
#define SET_CLOCK 1

PmodRTCC clock;

//core functiosn
void Clock_Init();
void Cock_Cleanup();
void Clock_EnableCache();
void Clock_DisableCache();


//clock functions
Time Clock_GetTime(Target src);
Time Clock_IncrementTime(Time time, int delta_seconds);
void Clock_SetTime(Time val, Target t);
u8 bcd2int(u8 data);
u8 int2bcd(u8 data);
//void PrintTime(RTCC_Target src);

#endif
