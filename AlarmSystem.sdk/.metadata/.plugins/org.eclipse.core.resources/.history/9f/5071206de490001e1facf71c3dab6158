#include "clock.h"
#include <stdio.h>

void Clock_initialize(PmodRTCC *rtc, u32 IIC_Address, u8 Chip_Address) {
    RTCC_begin(rtc, IIC_Address, Chip_Address);
}

void Clock_setTime(PmodRTCC *rtc, int hours, int minutes, int seconds) {
    RTCC_setHour24(rtc, RTCC_TARGET_RTCC, hours);
    RTCC_setMin(rtc, RTCC_TARGET_RTCC, minutes);
    RTCC_setSec(rtc, RTCC_TARGET_RTCC, seconds);
}

void Clock_setDate(PmodRTCC *rtc, int day, int month, int year) {
    RTCC_setDay(rtc, RTCC_TARGET_RTCC, day);
    RTCC_setMonth(rtc, RTCC_TARGET_RTCC, month);
    RTCC_setYear(rtc, year);
}

void Clock_setAlarm(PmodRTCC *rtc, int hours, int minutes, int seconds) {
    RTCC_setHour24(rtc, RTCC_TARGET_ALM0, hours);
    RTCC_setMin(rtc, RTCC_TARGET_ALM0, minutes);
    RTCC_setSec(rtc, RTCC_TARGET_ALM0, seconds);
}

void Clock_enableAlarm(PmodRTCC *rtc) {
    RTCC_enableAlarm(rtc, RTCC_TARGET_ALM0, 0);
}

void Clock_disableAlarm(PmodRTCC *rtc) {
    RTCC_disableAlarm(rtc, RTCC_TARGET_ALM0);
}

void Clock_checkAlarm(PmodRTCC *rtc) {
    if (RTCC_checkFlag(rtc, RTCC_TARGET_ALM0)) {
        printf("Alarm Triggered!\n");
        RTCC_disableAlarm(rtc, RTCC_TARGET_ALM0); // Disabling the alarm after it triggers
    }
}
